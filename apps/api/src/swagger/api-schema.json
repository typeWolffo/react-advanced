{
  "openapi": "3.0.0",
  "paths": {
    "/api/healthcheck": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/api/user/user/{id}": {
      "get": {
        "operationId": "UserController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByIdResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "operationId": "AuthController_refreshTokens",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokensResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/current-user": {
      "get": {
        "operationId": "AuthController_currentUser",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/tasks": {
      "post": {
        "operationId": "TasksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new task",
        "tags": [
          "tasks"
        ]
      },
      "get": {
        "operationId": "TasksController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tasks retrieved successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all tasks for the authenticated user",
        "tags": [
          "tasks"
        ]
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "operationId": "TasksController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task retrieved successfully"
          },
          "404": {
            "description": "Task not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a specific task by ID",
        "tags": [
          "tasks"
        ]
      },
      "patch": {
        "operationId": "TasksController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "404": {
            "description": "Task not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a task",
        "tags": [
          "tasks"
        ]
      },
      "delete": {
        "operationId": "TasksController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "Task not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a task",
        "tags": [
          "tasks"
        ]
      }
    },
    "/api/tasks/internal/mcp": {
      "post": {
        "operationId": "TasksController_createInternal",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create task via MCP (internal)",
        "tags": [
          "tasks"
        ]
      },
      "get": {
        "operationId": "TasksController_findAllInternal",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get tasks via MCP (internal)",
        "tags": [
          "tasks"
        ]
      }
    },
    "/api/tasks/internal/mcp/{id}": {
      "patch": {
        "operationId": "TasksController_updateInternal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update task via MCP (internal)",
        "tags": [
          "tasks"
        ]
      },
      "delete": {
        "operationId": "TasksController_removeInternal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete task via MCP (internal)",
        "tags": [
          "tasks"
        ]
      }
    }
  },
  "info": {
    "title": "API Documentation",
    "description": "API documentation with TypeBox",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "GetUserByIdResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "required": [
              "id",
              "email",
              "username",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "RegisterBody": {
        "type": "object",
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "maxLength": 64,
            "type": "string"
          },
          "password": {
            "minLength": 8,
            "maxLength": 64,
            "type": "string"
          },
          "confirmPassword": {
            "minLength": 8,
            "maxLength": 64,
            "type": "string"
          }
        },
        "required": [
          "email",
          "username",
          "password",
          "confirmPassword"
        ]
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "required": [
              "id",
              "email",
              "username",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "LoginBody": {
        "type": "object",
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "password": {
            "minLength": 8,
            "maxLength": 64,
            "type": "string"
          },
          "rememberMe": {
            "type": "boolean"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "createdAt",
                  "updatedAt"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "accessToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "accessToken"
                ]
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "LogoutResponse": {
        "type": "null"
      },
      "RefreshTokensResponse": {
        "type": "null"
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "required": [
              "id",
              "email",
              "username",
              "createdAt",
              "updatedAt"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateBody": {
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          },
          "priority": {
            "anyOf": [
              {
                "const": "LOW",
                "type": "string"
              },
              {
                "const": "MEDIUM",
                "type": "string"
              },
              {
                "const": "HIGH",
                "type": "string"
              }
            ]
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "title"
        ]
      }
    }
  }
}